{"version":3,"sources":["components/FeedbackOptions/FeedbackButton.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","components/Notification/Notification.module.scss","components/Statistics/Statistics.module.scss","components/Section/Section.jsx","components/FeedbackOptions/FeedbackButton.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","AppWithClass.js","App.js","index.js","components/Section/Section.module.scss"],"names":["module","exports","Section","title","children","className","style","container","defaultProps","FeedbackButton","buttonName","onFeedback","button","type","name","onClick","FeedbackOptions","options","onLeaveFeedback","buttonArray","Object","keys","map","shortid","generate","Statistics","good","neutral","bad","total","positivePercentage","item","Notification","message","AppWithClass","state","optionsData","handelLeaveFeedback","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","positiveFeedbackPercentage","parseFloat","Math","round","toFixed","this","backgroundColor","Component","App","useState","setOptions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d4ed3f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackButton_button__12JqX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__3zEmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__290SE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__mfkLw\"};","import PropTypes from 'prop-types';\r\nimport style from './Section.module.scss';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={style.container}>\r\n      <h2 className={style.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n  children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './FeedbackButton.module.scss';\r\n\r\nconst FeedbackButton = ({ buttonName, onFeedback }) => (\r\n  <button\r\n    className={style.button}\r\n    type=\"button\"\r\n    name={buttonName}\r\n    onClick={onFeedback}\r\n  >\r\n    {buttonName}\r\n  </button>\r\n);\r\n\r\nFeedbackButton.propTypes = {\r\n  buttonName: PropTypes.string.isRequired,\r\n  onFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackButton;\r\n","// import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport FeedbackButton from './FeedbackButton';\r\nimport style from './FeedbackOptions.module.scss';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const buttonArray = Object.keys(options);\r\n  return (\r\n    <div className={style.container}>\r\n      {buttonArray.map(button => (\r\n        <FeedbackButton\r\n          key={shortid.generate()}\r\n          buttonName={button}\r\n          onFeedback={onLeaveFeedback}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport style from './Statistics.module.scss';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p className={style.item}>Good: {good}</p>\r\n      <p className={style.item}>Neutral: {neutral}</p>\r\n      <p className={style.item}>Bad: {bad}</p>\r\n      <p className={style.item}>Total: {total}</p>\r\n      <p className={style.item}>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport style from './Notification.module.scss';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={style.title}>{message}</p>;\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: 'No feedback',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Section from './components/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics';\r\nimport Notification from './components/Notification';\r\nimport optionsData from './components/data/options.json';\r\n\r\nclass AppWithClass extends Component {\r\n  state = optionsData;\r\n\r\n  handelLeaveFeedback = ({ target }) => {\r\n    const { name } = target;\r\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\r\n  };\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const countTotalFeedback = good + neutral + bad;\r\n    let positiveFeedbackPercentage;\r\n    if (countTotalFeedback > 0) {\r\n      positiveFeedbackPercentage = (good * 100) / countTotalFeedback;\r\n    } else {\r\n      positiveFeedbackPercentage = 0;\r\n    }\r\n    if (positiveFeedbackPercentage < 1 && positiveFeedbackPercentage > 0) {\r\n      positiveFeedbackPercentage = parseFloat(\r\n        (Math.round(((good * 100) / countTotalFeedback) * 100) / 100).toFixed(\r\n          2,\r\n        ),\r\n      );\r\n    } else {\r\n      positiveFeedbackPercentage = Math.round(\r\n        (good * 100) / countTotalFeedback,\r\n      );\r\n    }\r\n\r\n    return positiveFeedbackPercentage;\r\n  };\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <div style={{ backgroundColor: 'rgb(209, 201, 201)' }}>\r\n        <Section title=\"Please leave feedback(class)\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.handelLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            ></Statistics>\r\n          ) : (\r\n            <Notification />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppWithClass;\r\n","import React, { useState } from 'react';\r\nimport Section from './components/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics';\r\nimport Notification from './components/Notification';\r\nimport AppWithClass from './AppWithClass';\r\nimport optionsData from './components/data/options.json';\r\n\r\nconst App = () => {\r\n  const [options, setOptions] = useState(optionsData);\r\n  const { good, neutral, bad } = options;\r\n\r\n  const handelLeaveFeedback = ({ target }) => {\r\n    const { name } = target;\r\n    setOptions(prevState => ({ ...prevState, [name]: prevState[name] + 1 }));\r\n  };\r\n\r\n  const countTotalFeedback = () => good + neutral + bad;\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    let positiveFeedbackPercentage;\r\n    if (countTotalFeedback() > 0) {\r\n      positiveFeedbackPercentage = (good * 100) / countTotalFeedback();\r\n    } else {\r\n      positiveFeedbackPercentage = 0;\r\n    }\r\n    if (positiveFeedbackPercentage < 1 && positiveFeedbackPercentage > 0) {\r\n      positiveFeedbackPercentage = parseFloat(\r\n        (Math.round(((good * 100) / countTotalFeedback()) * 100) / 100).toFixed(\r\n          2,\r\n        ),\r\n      );\r\n    } else {\r\n      positiveFeedbackPercentage = Math.round(\r\n        (good * 100) / countTotalFeedback(),\r\n      );\r\n    }\r\n\r\n    return positiveFeedbackPercentage;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave feedback(hooks)\">\r\n        <FeedbackOptions\r\n          options={options}\r\n          onLeaveFeedback={handelLeaveFeedback}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() > 0 ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          ></Statistics>\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n      <AppWithClass />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1amlt\",\"title\":\"Section_title__1V7gc\"};"],"sourceRoot":""}